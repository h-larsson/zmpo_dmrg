import numpy
from pyscf import gto,scf

#==================================================================
# MOLECULE
#==================================================================
mol = gto.Mole()
mol.verbose = 5 #6

#==================================================================
# Coordinates and basis
#==================================================================
molname = 'h2o' #be' #h2cluster'#h2o3' #c2'

if molname == 'h10':
   R1 = 2
   R2 = 2.5
   R1 = R1*0.52917721092
   R2 = R2*0.52917721092
   mol.atom = [['H',(0,0,0 )],
   	       ['H',(0,0,R1)],
	       ['H',(0,0,R1+R2)],
	       ['H',(0,0,2*R1+R2)],
	       ['H',(0,0,2*R1+2*R2)],
	       ['H',(0,0,3*R1+2*R2)],
	       ['H',(0,0,3*R1+3*R2)],
	       ['H',(0,0,4*R1+3*R2)],
	       ['H',(0,0,4*R1+4*R2)],
	       ['H',(0,0,5*R1+4*R2)]
	       ]		
   mol.basis = 'sto-6g'

elif molname == 'hring':
   def make(nat, b=1.):
       r = b/2 / numpy.sin(numpy.pi/nat)
       atms = []
       for i in range(nat):
           theta = i * (2*numpy.pi/nat)
           atms.append((r*numpy.cos(theta), r*numpy.sin(theta), 0))
       return atms
   R = 4.9 # bohr
   R = R*0.52917721092
   natoms = 10
   for icoord in make(natoms,b=R):
      mol.atom.append(['H',icoord])
   mol.basis='minao' #sto-6g' #6-31g'

elif molname == 'bh':
   R = 1.2324
   mol.atom = [['B',(0,0,0)],
   	       ['H',(0,0,R)]]		
   mol.basis = 'aug-cc-pvdz'

if molname == 'beh':
   R = 1.3426
   mol.atom = [['Be',(0,0,0)],
   	       ['H',(0,0,R)]]	
   mol.basis = 'sto-3g' #6-31g' #aug-cc-pvdz'

elif molname == 'h12':
   R=5. #bohr
   R=R*0.52917721092
   mol.atom = [
   		['H',(0.0,0.0,0.0)],
   		['H',(0.0,0.0,R)],
   		['H',(0.0,0.0,2*R)],
   		['H',(R,0.0,0.0)],
   		['H',(R,0.0,R)],
   		['H',(R,0.0,2*R)],
   		['H',(2*R,0.0,0.0)],
   		['H',(2*R,0.0,R)],
   		['H',(2*R,0.0,2*R)],
   		['H',(3*R,0.0,0.0)],
   		['H',(3*R,0.0,R)],
   		['H',(3*R,0.0,2*R)]
   	      ]
   mol.basis='minao' #sto-6g' #6-31g'

elif molname == 'h2o1':
   mol.atom = [['O'    , (0.00000000  , -0.00000000  , -0.11753053)],
   	       ['H'    , (0.00000000  , -0.78033062  ,  0.45358515)],
   	       ['H'    , (0.00000000  ,  0.78033062  ,  0.45358515)]]
   mol.basis = '6-31g'                              
#
#Summary of FCI:
#	E_scf = -85.079351279 -75.9845028426
#	E_fci = -85.2169414026 -76.1220929662
#	E_cor = -0.13759012359
#
elif molname == 'h2o2':                             
   mol.atom = [['O'    , (0.00000000  ,  0.00000000  , -0.68864621)],
   	       ['H'    , (0.00000000  , -1.56066124  ,  0.45358515)],
   	       ['H'    , (0.00000000  ,  1.56066124  ,  0.45358515)]]
   mol.basis = '6-31g'                              
#
#Summary of FCI:
#	E_scf = -80.1280169711 -75.5805927529
#	E_fci = -80.4247724171 -75.8773481989
#	E_cor = -0.296755445941
#
elif molname == 'h2o3':                             
   mol.atom = [['O'    , (0.00000000  ,  0.00000000  , -1.25976189)],
   	       ['H'    , (0.00000000  , -2.34099186  ,  0.45358515)],
   	       ['H'    , (0.00000000  ,  2.34099186  ,  0.45358515)]]
   mol.basis = '6-31g'
#
#Summary of FCI:
#	E_scf = -78.4501440274 -75.4185278819
#	E_fci = -78.8686284165 -75.8370122711
#	E_cor = -0.418484389153
#
elif molname == 'be':
   natoms = 2
   R = 1.e2
   mol.atom = [['Be',(0.0,0.0,i*R)] for i in range(natoms)]
   mol.basis = '6-31g'

elif molname == 'cr':
   R = 1.0
   natoms = 2 
   mol.atom = [['Cr',(0.0,0.0,i*R)] for i in range(natoms)]
   mol.basis = '6-31g'

elif molname == 'h2cluster':
   R1 = 0.74144
   R2 = 100
   np = 2
   mol.atom = [['H',(R1/2,0.0,i*R2)] for i in range(np)]+\
	      [['H',(-R1/2,0.0,i*R2)] for i in range(np)]
   mol.basis = 'dzp' #sto-3g'

elif molname == 'he':
   R = 1.e2
   natoms = 3 #50 #20 #,14,20,50
   mol.atom = [['He',(0.0,0.0,i*R)] for i in range(natoms)]
   mol.basis = '6-31g'

elif molname == 'ne':
   R = 1.e0
   natoms = 1 #50 #20 #,14,20,50
   mol.atom = [['Ne',(0.0,0.0,i*R)] for i in range(natoms)]
   mol.basis = 'dzp'

elif molname == 'h':
   R = 1.0
   natoms = 6 #10 #40 #,14,20,50
   mol.atom = [['H',(0.0,0.0,i*R)] for i in range(natoms)]
   mol.basis = 'sto-3g' #cc-pvdz' #sto-3g' #6-31g' 

#------------------------------------------------------------------------------
# 1d [M is small?] dynamic correlation: Norb = 64 [H-6bas] => dim(FCI)=4.6G  
# where the electrons are roughtly occupied some sets of 1d occupied orbitals.
#------------------------------------------------------------------------------
#   
#   mol.basis = 'aug-cc-pvdz'
#
#[phs_dmrg_ci.solver]: solver/direct =  (1, 1)
# Dimension of spaces (L,R,LR,T,S) =  (5356, 103, 551668, 187460, 187460)
# xxD[1,2] -735851.303097  t=0.43
# xxD[E2Q] -225771.26752  t=4.90
# Sum of Diag= 467204.165007  t=5.81
# Time for diagonal = 5.95 s  rank= 0
# Wtime for diagonal = 5.95 s
# xxH[1,2] -8.98746566941  t=0.60
#
#---------------------------------------------------------------------------

   # H6 -7.8399080149
   ##
   #Summary of FCI:
   #	E_scf = -7.73937394897 -3.13553221397
   #	E_fci = -7.8399080149 -3.23606627989
   #	E_cor = -0.100534065926
   #
   # 6-31g 
   # Summary of FCI:
   # 	E_scf = -7.83097019261 -3.22712845761
   # 	E_fci = -7.93039310269 -3.32655136769
   # 	E_cor = -0.099422910083
   # D=50 E(oneSite)= -3.325284033589 
   #
   # H10
   #Summary of FCI:
   #	E_scf = -15.4217292089
   #	E_fci = -15.5876151507
   #	E_cor = -0.165885941826
   #

   # H14
   # {1, 15, 105, 455, 1365, 3003, 5005, 6435, 6435, 5005, 3003, 1365, \
   #		455, 105, 15, 1}
   #Summary of FCI (H14):
   #	E_scf = -23.9752770884
   #	E_fci = -24.2066180755
   #	E_cor = -0.231340987161
   #
   
   #mol.atom = [['H',(0.0,0.0,1.0)],
   #   	     ['H',(0.0,1.0,0.0)],
   #	     ['H',(1.0,0.0,0.0)],
   #	     ['H',(1.0,1.0,1.0)]]
   #mol.basis = 'sto-3g'

   # Linear H4
   #[-4.4594887  -4.22685848 -4.01259539 -3.94275913 -3.91623927 -3.73079253
   # -3.6253766  -3.57792381 -3.50775782 -3.4399056  -3.4150989  -3.39908273
   # -3.27654158 -3.23707664 -3.23635153 -3.07263647 -3.01279361 -2.99374943
   # -2.93248044 -2.9177464  -2.84465865 -2.76856964 -2.70511698 -2.67512625
   # -2.5522374  -2.55118645 -2.51015835 -2.47152167 -2.37967756 -2.14849993
   # -2.08532076 -2.04353427 -2.04311179 -1.77225679 -1.63925783 -1.54213766]
   
   #Spin-Orbital results [triplet is 3-fold degenerate]
   #[-4.4594887  -4.22685848 -4.22685848 -4.22685848 -4.01259539 -4.01259539
   # -4.01259539 -3.94275913 -3.91623927 -3.73079253 -3.73079253 -3.73079253
   # -3.6253766  -3.57792381 -3.57792381 -3.57792381 -3.50775782 -3.50775782
   # -3.50775782 -3.50775782 -3.50775782 -3.4399056  -3.4150989  -3.39908273
   # -3.39908273 -3.39908273 -3.27654158 -3.23707664 -3.23707664 -3.23707664
   # -3.23635153 -3.07263647 -3.07263647 -3.07263647 -3.01279361 -3.01279361
   # -3.01279361 -2.99374943 -2.93248044 -2.93248044 -2.93248044 -2.9177464
   # -2.9177464  -2.9177464  -2.84465865 -2.76856964 -2.70511698 -2.70511698
   # -2.70511698 -2.67512625 -2.5522374  -2.55118645 -2.55118645 -2.55118645
   # -2.51015835 -2.51015835 -2.51015835 -2.47152167 -2.37967756 -2.14849993
   # -2.14849993 -2.14849993 -2.08532076 -2.04353427 -2.04353427 -2.04353427
   # -2.04311179 -1.77225679 -1.63925783 -1.54213766]
   #

elif molname == 'n2':
   #
   # Spin-contamination 
   #
   R=2.5#1.097685#2.0 #1.0 #1.0976 # Re
   mol.atom = [['N',(0,0,0)],
   	       ['N',(0,0,R)]]		
   mol.basis = 'cc-pvdz' #6-31g'#sto-3g'#cc-pvdz' #'dzp' #6-31g'#sto-3g' #6-31g'

   #
   #E_scf = -133.349215787
   #E_fci = -133.478984293
   #E_cor = -0.129768506199
   #
   # D=10 E_el   =    -133.442610870133 (layer=0)
   # D=20 E_el   =    -133.471840976500 (layer=0)
   #
   # D=10 for R=1.0: -133.455680877569
   #
   # D=10 is exact for R=10.0 - wrong state !
   #Summary of FCI:
   #	E_scf = -109.347035082 -106.754066749
   #	E_fci = -110.030988703 -107.438020369
   #	E_cor = -0.683953620334
   #			
   
elif molname == 'c2':
   R = 1.24253
   natoms = 2 #40 #,14,20,50
   mol.atom = [['C',(0.0,0.0,i*R)] for i in range(natoms)]
   mol.basis = 'cc-pvtz' #sto-3g'

elif molname == 'hf':
   R=3.4
   mol.atom = [['H',(0,0,0)],
   	       ['F',(0,0,R)]]		
   mol.basis = '6-31g' #sto-3g' #cc-pvdz'#sto-3G'

elif molname == 'h2o':
   mol.basis = 'dz' #6-31G' #sto-3g'#dzp'
   mol.atom = [['O',(0, 0, 0)], 
   	    ['H',(0.790689766, 0, 0.612217330)],
   	    ['H',(-0.790689766, 0, 0.612217330)]]
## 1.5
#   mol.atom = [['O',(0, 0, 0)], 
#   	    ['H',( 1.186034914, 0, 0.918326260)],
#   	    ['H',(-1.186034914, 0, 0.918326260)]]
## 3
#   mol.atom = [['O',(0, 0, 0)], 
#   	    ['H',( 2.37206886, 0, 1.83665165)],
#   	    ['H',(-2.37206886, 0, 1.83665165)]]
# 2
#   mol.atom = [['O',(0, 0, 0)], 
#   	    ['H',( 1.58137920, 0, 1.22443449)],
#   	    ['H',(-1.58137920, 0, 1.22443449)]]
#   bas = 'dz' #'tz2p'
   bas = None
   if bas == 'dzx':
      mol.basis = {'H':gto.basis.parse(
      '''H    S
           19.2406000              0.0328280        
            2.8992000              0.2312080        
            0.6534000              0.8172380        
      H    S
            0.1776000              1.0000000        
      '''),
      'O':gto.basis.parse('''
      O      S
         7816.5400000              0.0020310        
         1175.8200000              0.0154360        
          273.1880000              0.0737710        
           81.1696000              0.2476060        
           27.1836000              0.6118320        
            3.4136000              0.2412050        
      O    S
            9.5322000              1.0000000        
      O    S
            0.9398000              1.0000000        
      O    S
            0.2846000              1.0000000        
      O    P
           35.1832000              0.0195800        
            7.9040000              0.1241890        
            2.3051000              0.3947270        
            0.7171000              0.6273750        
      O    P
            0.2137000              1.0000000        
      ''')}
   ###
   ###Summary of FCI:
   ###	E_scf = -84.8071433421 -76.0056794008
   ###	E_fci = -84.9581628627 -76.1566989214
   ###	E_cor = -0.151019520558
   ###
   elif bas == 'tz2p':
      mol.basis = {'H':gto.basis.parse(
       '''H    S
          188.6144500              0.0009639             -0.0013119              0.0024224        
           28.2765960              0.0074920             -0.0103451              0.0203382        
            6.4248300              0.0375954             -0.0504953              0.0896394        
            1.8150410              0.1433950             -0.2073855              0.4422907        
            0.5910630              0.3486363             -0.4350885              0.5757144        
            0.2121490              0.4382974             -0.0247297             -0.9802890        
            0.0798910              0.1651066              0.3225260             -0.6721538        
            0.0279620              0.0210229              0.7072754              1.1417685        
      H    P
            2.3050000              0.1127902             -0.2108688        
            0.8067500              0.4185075             -0.5943796        
            0.2823620              0.4700077              0.0896889        
            0.0988270              0.1826260              0.8611634       
            '''),
            'O':gto.basis.parse(
      '''O    S
       105374.9500000              0.0000459             -0.0000105              0.0000090             -0.0000109        
        15679.2400000              0.0003607             -0.0000825              0.0000705             -0.0000822        
         3534.5447000              0.0019198             -0.0004412              0.0003757             -0.0004675        
          987.3651600              0.0082067             -0.0018864              0.0016146             -0.0018465        
          315.9787500              0.0297257             -0.0069540              0.0059340             -0.0075585        
          111.6542800              0.0904558             -0.0217208              0.0187866             -0.0210868        
           42.6994510              0.2174054             -0.0568513              0.0494683             -0.0667511        
           17.3955960              0.3687657             -0.1139635              0.1030399             -0.1093673        
            7.4383090              0.3372798             -0.1620201              0.1620586             -0.2731431        
            3.2228620              0.0967505             -0.0333800              0.0009367              0.2097137        
            1.2538770              0.0025674              0.3655068             -0.8224251              1.2034807        
            0.4951550              0.0013746              0.5520031             -0.1017902             -0.6774694        
            0.1916650             -0.0001410              0.2236393              0.4253939             -1.4298840        
            0.0670830              0.0000683              0.0065745              0.6877028              1.4891068        
      O    P
          200.0000000              0.0008933             -0.0008384              0.0012618        
           46.5333670              0.0073690             -0.0068491              0.0111628        
           14.6218090              0.0349392             -0.0328505              0.0518316        
            5.3130640              0.1152985             -0.1100060              0.1978845        
            2.1025250              0.2583231             -0.3135263              0.5707652        
            0.8502230              0.3696231             -0.3196011             -0.1789291        
            0.3375970              0.3238789              0.2217243             -0.8982077        
            0.1288920              0.1467989              0.5622616              0.2666643        
            0.0451120              0.0336127              0.3013251              0.6258994        
      O    D
            3.7500000              0.1284934             -0.2182055        
            1.3125000              0.5211884             -0.4817695        
            0.4593750              0.4345784              0.1357595        
            0.1607810              0.1457409              0.8297734        
      ''')}
   #mol.basis = 'cc-pvdz'
   
   # E_FCI = -103.365869452683
   #
   #[-103.36586945 -103.00958846 -103.00958846 -102.9702008  -102.9702008
   # -102.90026237 -102.56123109 -102.29397519 -102.20080269 -102.20080269
   # -102.18643445 -102.18643445 -102.16116544 -102.10818194 -102.10818194
   # -102.02440132 -101.97159586 -101.81511246 -101.41670634 -101.41670634
   # -101.30948714 -101.03137698 -101.03137698 -100.95189782 -100.17732805
   #  -77.9091507   -77.88841242  -76.9196065   -76.9196065   -76.87554561
   #  -76.86027061  -76.86027061  -76.82079244  -75.98246689  -75.83139001
   #  -47.79604854]

#mol.atom = [
#   	    ['C',   (  -3.95011872 ,   0.17026143 ,   0.00000000)],  
#   	    ['C',   (  -2.63398095 ,   0.33099285 ,   0.00000000)],
#   	    ['H',   (  -4.65134081 ,   1.01552882 ,   0.00000000)],
#   	    ['H',   (  -4.42734531 ,  -0.81889812 ,   0.00000000)],
#   	    ['H',   (  -2.15675436 ,   1.32015240 ,   0.00000000)],
#   	    ['C',   (  -1.65072053 ,  -0.85424930 ,   0.00000000)],
#   	    ['C',   (  -0.33458454 ,  -0.69350323 ,   0.00000000)],
#   	    ['H',   (  -2.12793610 ,  -1.84341417 ,   0.00000000)],
#   	    ['H',   (   0.36664695 ,  -1.53876281 ,   0.00000000)],
#   	    ['C',   (   0.33458454 ,   0.69350323 ,   0.00000000)],
#   	    ['C',   (   1.65072053 ,   0.85424930 ,   0.00000000)],
#   	    ['H',   (  -0.36664695 ,   1.53876281 ,   0.00000000)],
#   	    ['H',   (   2.12793610 ,   1.84341417 ,   0.00000000)],
#   	    ['C',   (   2.63398095 ,  -0.33099285 ,   0.00000000)],
#   	    ['C',   (   3.95011872 ,  -0.17026143 ,   0.00000000)],
#   	    ['H',   (   2.15675436 ,  -1.32015240 ,   0.00000000)],
#   	    ['H',   (   4.65134081 ,  -1.01552882 ,   0.00000000)],
#   	    ['H',   (   4.42734531 ,   0.81889812 ,   0.00000000)]
#	 ]

#==================================================================
mol.symmetry = False #True
#mol.symmetry_subgroup = 'c2v'
mol.charge = 0
mol.spin = 0
#==================================================================
mol.build()

#==================================================================
# SCF
#==================================================================
mf = scf.RHF(mol)
mf.init_guess = 'atom'
mf.level_shift = 0.0
mf.max_cycle = 100
mf.conv_tol=1.e-14
#mf.irrep_nelec = {'B2':2}
print((mf.scf()))
mf.analyze()

#==================================================================
# Dump integrals
#==================================================================
from zmpo_dmrg.source.itools import ipyscf_real
#mol.spin = 2 - triplet
iface = ipyscf_real.iface(mol,mf)
#iface.ccsd()
#iface.fci()
#iface.molden(iface.mo_coeff,'CMO')
#print iface.reorder(iface.mo_coeff)
#iface.local()
#iface.molden(iface.lmo_coeff,'LMO')
#print iface.reorder(iface.lmo_coeff)

#iface.nfrozen = 4
iface.iflocal = True
iface.iflowdin = True 
iface.ifreorder = True 

iface.dump(fname='mole.h5')
